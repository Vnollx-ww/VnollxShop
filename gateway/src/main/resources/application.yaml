server:
  port: 8080
spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  application:
    name: gateway-service # 服务名称 表示这个服务
  cloud:

    nacos:
      #指定 Nacos 服务器的地址，这里是本地运行的 Nacos 服务
      serverAddr: 127.0.0.1:8848

    gateway:
      discovery:
        locator:
          enabled: true  # 开启服务发现自动路由
          lower-case-service-id: true
      routes:
        # 用户服务路由 - 需要认证
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/user/**
          filters:

            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 30
                redis-rate-limiter.requestedTokens: 1
            - name: Retry
              args:
                retries: 3
                series: SERVER_ERROR

        # 产品服务路由 - 需要认证
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/product/**
          filters:

            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 25
                redis-rate-limiter.burstCapacity: 50
                redis-rate-limiter.requestedTokens: 1

        # 用户服务路由 - 需要认证
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/order/**
          filters:

            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 30
                redis-rate-limiter.requestedTokens: 1
            - name: Retry
              args:
                retries: 3
                series: SERVER_ERROR
        - id: card-service
          uri: lb://card-service
          predicates:
            - Path=/api/card/**
          filters:

            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 15
                redis-rate-limiter.burstCapacity: 30
                redis-rate-limiter.requestedTokens: 1
            - name: Retry
              args:
                retries: 3
                series: SERVER_ERROR
        # 产品服务路由 - 需要认证
        - id: middleware-service
          uri: lb://middleware-service
          predicates:
            - Path=/api/middleware/**
          filters:

            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 25
                redis-rate-limiter.burstCapacity: 50
                redis-rate-limiter.requestedTokens: 1
        # 健康检查路由 - 直接放行
        - id: health-check
          uri: lb://gateway-service
          predicates:
            - Path=/actuator/**


        # 默认路由 - 处理未匹配的请求
          #- id: default-route
          #uri: lb://auth-service
            #predicates:
            #- Path=/**
            #filters:
              #- name: RewritePath
              #args:
              #regexp: /(.*)
            #replacement: /api/auth/fallback/$1
    loadbalancer:
      configurations: default

  config:
    import:
      #含义：从 Nacos 配置中心加载与当前应用名称（spring.application.name）匹配的配置文件。
      #optional 如果找不到该文件则不报错
      - optional:nacos:${spring.application.name}.yaml
      - optional:nacos:feign.yaml?group=DEFAULT_GROUP  # 显式加载 feign.yaml
      - optional:nacos:redis.yaml?group=DEFAULT_GROUP  # 显式加载 feign.yaml

# 日志配置
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.data.redis: DEBUG                     # Redis操作日志
    reactor.netty: DEBUG
    com.example.gateway: TRACE



