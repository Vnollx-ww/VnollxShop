#version: '3.8'

services:
  vnollx-user:
    image: vnollx/vnollx-user:latest
    container_name: vnollx-user
    ports:
      - "8082:8082"
    networks:
      - app-network
    depends_on:
      - mysql-master
      - mysql-slave
      - redis
      - rabbitmq
  vnollx-product:
    image: vnollx/vnollx-product:latest
    container_name: vnollx-product
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - mysql-master
      - mysql-slave
      - redis
      - rabbitmq
  vnollx-order:
    image: vnollx/vnollx-order:latest
    container_name: vnollx-order
    ports:
      - "8084:8084"
    networks:
      - app-network
    depends_on:
      - mysql-master
      - mysql-slave
      - redis
      - rabbitmq
  vnollx-card:
    image: vnollx/vnollx-card:latest
    container_name: vnollx-card
    ports:
      - "8085:8085"
    networks:
      - app-network
    depends_on:
      - mysql-master
      - mysql-slave
      - redis
      - rabbitmq
  vnollx-middleware:
    image: vnollx/vnollx-middleware:latest
    container_name: vnollx-middleware
    ports:
      - "8086:8086"
    networks:
      - app-network
    depends_on:
      - mysql-master
      - mysql-slave
      - redis
      - rabbitmq
  vnollx-gateway:
    image: vnollx/vnollx-gateway:latest
    container_name: vnollx-gateway
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - mysql-master
      - mysql-slave
      - redis
      - rabbitmq
  mysql-master:
    image: mysql:8.0
    container_name: mysql-master
    ports:
      - "3308:3308"  # 主库映射到 3308
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: vnollxonlinejudge
      MYSQL_REPLICATION_USER: repl  # 自动创建复制用户
      MYSQL_REPLICATION_PASSWORD: repl123
    volumes:
      - mysql-master-data:/var/lib/mysql
    command:
      - --port=3308  # 关键！让 MySQL 在容器内监听 3308
      - --server-id=1
      - --log-bin=mysql-bin
      - --binlog-format=ROW
      - --binlog-do-db=vnollxonlinejudge
      - --gtid-mode=ON
      - --enforce-gtid-consistency=ON
      - --default-authentication-plugin=mysql_native_password
    networks:
      - app-network

  mysql-slave:
    image: mysql:8.0
    container_name: mysql-slave
    ports:
      - "3309:3309"  # 从库映射到 3309
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: vnollxonlinejudge
    volumes:
      - mysql-slave-data:/var/lib/mysql
    command:
      - --port=3309  # 关键！让 MySQL 在容器内监听 3308
      - --server-id=2
      - --log-bin=mysql-bin
      - --binlog-format=ROW
      - --replicate-do-db=vnollxonlinejudge
      - --gtid-mode=ON
      - --enforce-gtid-consistency=ON
      - --read-only=1
      - --default-authentication-plugin=mysql_native_password
    depends_on:
      - mysql-master
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - app-network

  minio:
    image: bitnami/minio:latest
    container_name: minio
    environment:
      MINIO_ACCESS_KEY: vnollxvnollx           # 设置 MinIO 访问密钥
      MINIO_SECRET_KEY: vnollxvnollxvnollx        # 设置 MinIO 秘密密钥
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"                             # 映射 MinIO 服务端口
      - "9001:9001"                             # 映射 MinIO 控制台端口
    volumes:
      - minio-data:/data
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"  # RabbitMQ management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network
  go-judge:
    image: criyle/go-judge:latest
    container_name: go-judge
    ports:
      - "5050:5050"
    networks:
      - app-network
volumes:
  mysql-master-data:
    driver: local
  mysql-slave-data:
    driver: local
  minio-data:
    driver: local
  rabbitmq-data:
    driver: local

networks:
  app-network:
    driver: bridge